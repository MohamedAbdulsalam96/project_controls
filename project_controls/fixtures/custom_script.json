[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Item",
  "modified": "2020-11-04 19:37:52.136276",
  "name": "Item-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.fields_dict['expense_task'].get_query = function(doc) {\n  return{\n    filters:[\n      ['financial_task_type', '!=', 'SUMMARY'],\n      ['financial_task_group', '=', 'Expense']\n    ]\n  };\n};\ncur_frm.fields_dict['income_task'].get_query = function(doc) {\n  return{\n    filters:[\n      ['financial_task_type', '!=', 'SUMMARY'],\n      ['financial_task_group', '=', 'Income']\n    ]\n  };\n};"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Invoice",
  "modified": "2021-02-23 18:43:16.197855",
  "name": "Sales Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tbefore_load (frm) {\n\t  // your code here\n      if (frm.doc.__islocal){\n        // do something\n        frappe.call({\n          method: \"frappe.client.get_list\",\n          args: {\n            \"doctype\": \"Sales Invoice\",\n            \"filters\": [[\"status\", \"!=\", \"Cancelled\"], [\"status\", \"!=\", \"Draft\"]],\n            \"fields\": [\"invoice_code\", \"posting_date\"],\n            \"order_by\": \"posting_date desc\" \n          }, callback: function(r) {\n            if (!r.exc) {\n              var digit = \"0000\";\n              var id = \"FV\" + moment(frm.doc.posting_date).format(\"YY\") + \"-\";\n              // get expense task from response\n              if (r.message.length === 0) {\n                digit = \"0001\";\n                var code =   id + digit;\n                //console.log(code);\n                frm.set_value('invoice_code', code);\n              } else {\n                var len = +(r.message.length) - 1;  \n                var ext = +(r.message[len].invoice_code.slice(-4));\n                var next = ext + 1;\n                var ncode = (digit + next).slice(-4); \n                var res = id + ncode;\n                //console.log(res);\n                frm.set_value('invoice_code', res);\n              }\n            }\n          }    \n        }); \n      }\n\t},\n\trefresh (frm) {\n\t  frm.add_custom_button(\"Word Template\", function() {\n        var dialog = new frappe.ui.Dialog({\n        title: __('Choose a template file'),\n        fields: [\n          {\n            fieldname: 'template',\n            fieldtype: 'Link',\n            label: 'File',\n            options: 'File',\n            filters: {'attached_to_doctype': 'Word Template'}\n          },\n        ],\n        primary_action: () => {\n          dialog.hide();\n          frappe.call({\n            method: \"project_controls.project_controls.custom.fill_and_attach_template\",\n            args: {\n                doctype: frm.doc.doctype,\n                name: frm.doc.name,\n                template: dialog.get_values().template,\n            },\n            callback: (r) => frm.reload_doc(),\n          });\n        }\n      });\n      dialog.show();\n    }, \"Templates\");    \n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Quotation",
  "modified": "2021-02-23 19:32:34.935595",
  "name": "Quotation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_load (frm) {\n\t  // your code here\n      if (frm.doc.__islocal){\n        // do something\n        frappe.call({\n          method: \"frappe.client.get_list\",\n          args: {\n            \"doctype\": \"Quotation\",\n            \"filters\": [[\"status\", \"!=\", \"Cancelled\"], [\"status\", \"!=\", \"Draft\"]],\n            \"fields\": [\"quotation_code\", \"transaction_date\"],\n            \"order_by\": \"transaction_date desc\" \n          }, callback: function(r) {\n            if (!r.exc) {\n              var digit = \"00000\";\n              var id = moment(frm.doc.transaction_date).format(\"YY\") + \"PR\";\n              // get expense task from response\n              if (r.message.length === 0) {\n                digit = \"00001\";\n                var code =   id + digit;\n                //console.log(code);\n                frm.set_value('quotation_code', code);\n              } else {\n                var len = +(r.message.length) - 1;  \n                var ext = +(r.message[len].quotation_code.slice(-5));\n                var next = ext + 1;\n                var ncode = (digit + next).slice(-5); \n                var res = id + ncode;\n                //console.log(res);\n                frm.set_value('quotation_code', res);\n              }\n            }\n          }    \n        }); \n      }\n\t},\n\tsetup (frm) {\n\t  frm.set_query(\"quotation_budget\", function() {\n\t\treturn {\n\t\t  filters: [\n\t\t  \t[\"Expenses Financial Budget\",\"docstatus\", \"<\", 2],\n\t\t  \t[\"Expenses Financial Budget\",\"financial_budget_type\", \"=\", \"Quotation\"]\n\t\t  ]\n\t\t};\n\t  });\n\t},\n\tonload (frm) {\n\t  if (frm.doc.quotation_budget && frm.doc.total_cost > 0) {\n        frappe.call({\n          method: \"frappe.client.get_value\",\n          args: {\n            \"doctype\": \"Expenses Financial Budget\",\n            \"filters\": [[\"name\", \"=\", frm.doc.quotation_budget]],\n            \"fieldname\": \"total_amount\"\n          }, callback: function(r) {\n            if (!r.exc) {\n              //console.log(r.message);\n              frm.set_value('total_cost', r.message.total_amount);\n              var margin = +frm.doc.total * 100 / +frm.doc.total_cost - 100;\n              frm.set_value('margin', margin);\n            }\n          }    \n        });   \n      } else {\n        frm.set_value('total_cost', null);\n        frm.set_value('margin', null);\n      }  \n\t},\n\tvalidate (frm) {\n\t  if (frm.doc.quotation_budget && frm.doc.total_cost > 0) {\n        frappe.call({\n          method: \"frappe.client.get_value\",\n          args: {\n            \"doctype\": \"Expenses Financial Budget\",\n            \"filters\": [[\"name\", \"=\", frm.doc.quotation_budget]],\n            \"fieldname\": \"total_amount\"\n          }, callback: function(r) {\n            if (!r.exc) {\n              //console.log(r.message);\n              frm.set_value('total_cost', r.message.total_amount);\n              var margin = +frm.doc.total * 100 / +frm.doc.total_cost - 100;\n              frm.set_value('margin', margin);\n            }\n          }    \n        });   \n      } else {\n        frm.set_value('total_cost', null);\n        frm.set_value('margin', null);\n      }\t  \n\t},\n\tquotation_budget (frm) {\n      //console.log(frm.doc.quotation_budget);  \n      if (frm.doc.quotation_budget) {\n        frappe.call({\n          method: \"frappe.client.get_value\",\n          args: {\n            \"doctype\": \"Expenses Financial Budget\",\n            \"filters\": [[\"name\", \"=\", frm.doc.quotation_budget]],\n            \"fieldname\": \"total_amount\"\n          }, callback: function(r) {\n            if (!r.exc) {\n              //console.log(r.message);\n              frm.set_value('total_cost', r.message.total_amount);\n              var margin = +frm.doc.total * 100 / +frm.doc.total_cost - 100;\n              frm.set_value('margin', margin);\n            }\n          }    \n        });   \n      } else {\n          frm.set_value('total_cost', null);\n          frm.set_value('margin', null);\n      }\t    \n\t},\n\ttotal (frm) {\n      //console.log(frm.doc.quotation_budget);  \n      if (frm.doc.quotation_budget) {\n        frappe.call({\n          method: \"frappe.client.get_value\",\n          args: {\n            \"doctype\": \"Expenses Financial Budget\",\n            \"filters\": [[\"name\", \"=\", frm.doc.quotation_budget]],\n            \"fieldname\": \"total_amount\"\n          }, callback: function(r) {\n            if (!r.exc) {\n              //console.log(r.message);\n              frm.set_value('total_cost', r.message.total_amount);\n              var margin = +frm.doc.total * 100 / +frm.doc.total_cost - 100;\n              frm.set_value('margin', margin);\n            }\n          }    \n        });   \n      } else {\n          frm.set_value('total_cost', null);\n          frm.set_value('margin', null);\n      }\t    \n\t},\n\ttotal_cost (frm) {\n\t   if (frm.doc.total_cost > 0) {\n\t    var margin = +frm.doc.total * 100 / +frm.doc.total_cost - 100;    \n\t    frm.set_value('margin', margin);\n\t  } \n\t},\n\trefresh (frm) {\n\t  frm.add_custom_button(\"Word Template\", function() {\n        var dialog = new frappe.ui.Dialog({\n        title: __('Choose a template file'),\n        fields: [\n          {\n            fieldname: 'template',\n            fieldtype: 'Link',\n            label: 'File',\n            options: 'File',\n            filters: {'attached_to_doctype': 'Word Template', 'file_name': ['like', '%.docx']}\n          },\n        ],\n        primary_action: () => {\n          dialog.hide();\n          frappe.call({\n            method: \"project_controls.project_controls.custom.fill_and_attach_template\",\n            args: {\n                doctype: frm.doc.doctype,\n                name: frm.doc.name,\n                template: dialog.get_values().template,\n            },\n            callback: (r) => frm.reload_doc(),\n          });\n        }\n      });\n      dialog.show();\n      }, \"Templates\");     \n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Project",
  "modified": "2020-11-21 15:11:32.920911",
  "name": "Project-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Project', {\n\tbefore_load (frm) {\n\t  // your code here\n      if (frm.doc.__islocal){\n        // do something\n        frappe.call({\n          method: \"frappe.client.get_list\",\n          args: {\n            \"doctype\": \"Project\",\n            \"filters\": [[\"status\", \"!=\", \"Cancelled\"], [\"status\", \"!=\", \"Draft\"]],\n            \"fields\": [\"project_code\"],\n            \"order_by\": \"project_code asc\" \n          }, callback: function(r) {\n            if (!r.exc) {\n              var digit = \"00000\";\n              var id = moment(frappe.datetime.now_datetime()).format(\"YY\") + \"PR\";\n              // get expense task from response\n              if (r.message.length === 0) {\n                digit = \"00001\";\n                var code =   id + digit;\n                //console.log(code);\n                frm.set_value('project_code', code);\n              } else {\n                var len = +(r.message.length) - 1;  \n                var ext = +(r.message[len].project_code.slice(-5));\n                var next = +ext + 1;\n                var ncode = (digit + next).slice(-5); \n                var res = id + ncode;\n                //console.log(res);\n                frm.set_value('project_code', res);\n              }\n            }\n          }    \n        }); \n      }\n\t},\n\tsetup (frm) {\n\t  frm.set_query(\"project_budget\", function() {\n\t\treturn {\n\t\t  filters: [\n\t\t    [\"Expenses Financial Budget\",\"docstatus\", \"<\", 2],\n\t\t    [\"Expenses Financial Budget\",\"financial_budget_type\", \"=\", \"Project\"]\n\t\t  ]\n\t\t};\n\t  });\n\t  if (frm.doc.project_budget) {\n        frappe.call({\n          method: \"frappe.client.get_value\",\n          args: {\n            \"doctype\": \"Expenses Financial Budget\",\n            \"filters\": [[\"name\", \"=\", frm.doc.project_budget]],\n            \"fieldname\": \"total_amount\"\n          },\n          callback: function(r) {\n            if (!r.exc) {\n              //console.log(r.message);\n              frm.set_value('estimated_costing', r.message.total_amount);\n            }\n          }\n        });     \n        frappe.call({\n          method: \"frappe.client.get_list\",\n          args: {\n           \"doctype\": \"Task\",\n           \"filters\": [[\"Project\", \"=\", frm.doc.name]],\n           \"fields\": [\"subject\", \"expected_time\"]\n          },\n          callback: function(r) {\n             if (!r.exc) {\n               //console.log(r.message);\n               var i;\n               var htotal = 0;\n               for (i = 0; i < r.message.length; i++) {\n                 htotal += +r.message[i].expected_time;\n               }  \n               frm.set_value('estimated_time', htotal);\n             }\n          }    \n        });\n        frappe.call({\n          method: \"project_controls.project_controls.custom.get_commit\",\n          args: {\n            \"project\": frm.doc.name,\n          },\n          callback: function(r) {\n            if (!r.exc) {\n              var data = r.message;\n              //console.log(data[0].net_amount);\n              var j;\n              var committed = 0;\n              for (j = 0; j <data.length; j++) {\n                committed += +data[j].Amount;\n              }  \n              frm.set_value('total_committed_cost',committed);\n            }\n          }    \n        });\n      } else {\n          frm.set_value('estimated_costing', null);\n          frm.set_value('estimated_time', null);\n          frm.set_value('total_committed_cost', null);\n      }\n\t},\n\tproject_budget (frm) {\n      //console.log(frm.doc.project_budget);  \n      if (frm.doc.project_budget) {\n        frappe.call({\n          method: \"frappe.client.get_value\",\n          args: {\n            \"doctype\": \"Expenses Financial Budget\",\n            \"filters\": [[\"name\", \"=\", frm.doc.project_budget]],\n            \"fieldname\": \"total_amount\"\n          }, callback: function(r) {\n            if (!r.exc) {\n              //console.log(r.message);\n              frm.set_value('estimated_costing', r.message.total_amount);\n            }\n          }    \n        });   \n      } else {\n          frm.set_value('estimated_costing', null);\n      }\t    \n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Timesheet",
  "modified": "2020-11-16 10:21:14.480168",
  "name": "Timesheet-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Timesheet Detail', {\n   // cdt is Child DocType name i.e Time Logs\n   // cdn is the row name for e.g bbfcb8da6a\n   activity_type(frm, cdt, cdn) {\n     let row = frappe.get_doc(cdt, cdn);\n     if (row.activity_type) {\n       frappe.call({\n         method: \"frappe.client.get_value\",\n         args: {\n           \"doctype\": \"Item\",\n           \"filters\": {\"time_activity\": row.activity_type},\n           \"fieldname\": \"item_code\"\n         }, callback: function(r) {\n           if (!r.exc) {\n             frappe.model.set_value(cdt, cdn, \"item_code\", r.message.item_code);\n           }\n         }    \n       });\n     } else {\n       frappe.model.set_value(cdt, cdn, \"item_code\", null);\n     }\n   }\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Expenses Financial Budget",
  "modified": "2020-11-23 22:56:11.518409",
  "name": "Expenses Financial Budget-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Expenses Financial Budget', {\n  onload (frm) {\n    if (frm.doc.project) {\n      frappe.call({\n        method: 'project_controls.project_controls.custom.get_time',\n        args: {\n\t      project: frm.doc.project\n        },\n        callback: (r) => {\n          var time = r.message;\n          var hours = 0;\n          $.each(frm.doc.financial_budget_item, function(index, row){\n            if (row.is_time) {\n              var i = time.findIndex( ({item_code}) => item_code === row.item_code);\n              if ( i >= 0) {\n                //console.log(row.doctype, row.name, time[i].Hours);\n                frappe.model.set_value(row.doctype, row.name, \"qty_ordered\", time[i].Hours);\n                frappe.model.set_value(row.doctype, row.name, \"amount_ordered\", time[i].Costs);\n                frappe.model.set_value(row.doctype, row.name, \"pending_qty\", +row.qty - +time[i].Hours);\n                hours += +time[i].Hours;\n              }\n            }  \n          });\n          //var template = \"<p>Horas: <b>\" + hours + \"</b></p>\";\n          //console.log(frappe.render_template(template, frm));\n          //frm.set_df_property('html_summary', 'options', frappe.render_template(template));\n          //frm.refresh_field('html_summary');\n          }\n      });\n      frappe.call({\n        method: 'project_controls.project_controls.custom.get_commit',\n        args: {\n\t      project: frm.doc.project\n        },\n        callback: (r) => {\n          var orders = r.message;\n          $.each(frm.doc.financial_budget_item, function(index, row){\n            if (!row.is_time) {  \n              var i = orders.findIndex( ({item_code}) => item_code === row.item_code);\n              if ( i >= 0) {\n                //console.log(row.doctype, row.name, time[i].Hours);\n                frappe.model.set_value(row.doctype, row.name, \"qty_ordered\", orders[i].Qty);\n                frappe.model.set_value(row.doctype, row.name, \"amount_ordered\", orders[i].Amount);\n                frappe.model.set_value(row.doctype, row.name, \"pending_qty\", +row.qty - +orders[i].Qty);\n              }\n            }  \n          });\n        }\n      });\n      fillValues (frm);\n    }\n  },\n  refresh (frm) {\n    fillValues (frm);  \n  }\n});\nfrappe.ui.form.on('Financial Budget Item', {\n  // cdt is Child DocType name i.e Time Logs\n  // cdn is the row name for e.g bbfcb8da6a\n  item_code (frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    var arr = frm.doc.financial_budget_item;\n    var idx = arr.findIndex(item=>item.item_code === row.item_code);\n    var len = arr.length;\n    if (idx < 0 || idx === (+len - 1)) {\n      if (row.item_code) {\n        frappe.call({    \n          method: \"frappe.client.get_list\",\n          args: {\n            \"doctype\": \"Item\",\n            \"filters\": [[\"item_code\", \"=\", row.item_code]],\n            \"fields\": [\"*\"]\n          }, callback: function(r) {\n            if (!r.exc) {\n              frappe.model.set_value(cdt, cdn, \"expense_task\", r.message[0].expense_task);\n              frappe.model.set_value(cdt, cdn, \"is_time\", r.message[0].is_time_activity);\n            }\n          }    \n        });\n      } else {\n        frappe.model.set_value(cdt, cdn, \"expense_task\", null);\n        frappe.model.set_value(cdt, cdn, \"is_time\", 0);\n      }\n    } else {\n      frm.doc.financial_budget_item.splice([+len-1], 1);\n      frm.refresh_field('financial_budget_item');    \n      frappe.msgprint({\n        title: __('Notificacion'),\n        message: __('Item duplicado con la fila ' + (+idx + 1)),\n        action() {\n          //location.reload();\n          return(false);\n        }\n      });\n    }  \n  },\n  qty(frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    if (row.qty > 0 && row.unit_rate > 0) {\n        var factor = 1;\n        var amount = 0;\n        if (row.discount > 0) {\n          factor = 1 - +row.discount/100;\n        }\n        amount = (+row.qty * +row.unit_rate) * +factor;\n        frappe.model.set_value(cdt, cdn, \"amount\", amount);\n    }\n    fillValues (frm);\n  },\n  unit_rate(frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    if (row.qty > 0 && row.unit_rate > 0) {\n        var factor = 1;\n        var amount = 0;\n        if (row.discount > 0) {\n          factor = 1 - +row.discount/100;\n        }\n        amount = (+row.qty * +row.unit_rate) * +factor;\n        frappe.model.set_value(cdt, cdn, \"amount\", amount);\n    }\n    fillValues (frm);\n  },\n  discount(frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    if (row.qty > 0 && row.unit_rate > 0) {\n        var amount = 0;\n        var factor = 1 - +row.discount/100;\n        amount = (+row.qty * +row.unit_rate) * +factor;\n        frappe.model.set_value(cdt, cdn, \"amount\", amount);\n    }\n    fillValues (frm);\n  },\n  projection(frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    if (row.projection > 0) {\n        var amount = 0;\n        var factor = 1 - +row.discount/100;\n        amount = (+row.qty * +row.unit_rate) * +factor;\n        frappe.model.set_value(cdt, cdn, \"amount\", amount);\n    }\n    fillValues (frm);\n  },\n  financial_budget_item_remove (frm) {\n    fillValues (frm);\n  }    \n});\nfunction fillValues (frm) {\n  var financial_item = frm.doc.financial_budget_item;\n  var total = 0;\n  var cost = 0;\n  var projection = 0;\n  for (var i in financial_item) {\n    total = total + financial_item[i].amount;\n    if (frm.doc.project) {\n      cost = cost + financial_item[i].amount_ordered;\n      projection = projection + financial_item[i].projection;\n    }\n  }\n  $.each(frm.doc.financial_budget_item, function(index, row){\n    if (row.qty_ordered === 0) {\n      frappe.model.set_value(row.doctype, row.name, \"pending_qty\", Math.round(+row.qty));  \n    } else {\n      frappe.model.set_value(row.doctype, row.name, \"pending_qty\", Math.round(+row.qty - +row.qty_ordered));      \n    }\n  });\n  //console.log(total);\n  frm.set_value(\"total_amount\", total);\n  frm.set_value(\"actual_amount\", cost);\n  frm.set_value(\"total_projection\", projection);\n  if (projection > 0) {\n    frm.set_value(\"profit\", +total - +projection);  \n  }\n  if (frm.doc.project) {\n    // Show Expenses Summary\n    var expenses = [...new Set(financial_item.map(value => value.expense_task))];\n    var rtask = expenses.map(function(expense_task){\n      var sum = 0; \n      var bqty = 0;\n      var cqty = 0;\n      var comm = 0;\n      $.each(financial_item, function(index, value) {sum += (value.expense_task==expense_task?value.amount:0)} ); \n      $.each(financial_item, function(index, value) {bqty += (value.expense_task==expense_task?value.qty:0)} ); \n      $.each(financial_item, function(index, value) {cqty += (value.expense_task==expense_task?value.qty_ordered:0)} ); \n      $.each(financial_item, function(index, value) {comm += (value.expense_task==expense_task?value.amount_ordered:0)} ); \n      return {expense_task: expense_task, qty: bqty, sum: sum, order: cqty, commit: comm};\n    });\n    var rtemplate = \"\";\n    for (var j in rtask) {\n      rtemplate += '<tr class=\"grid-row\"><td>' + rtask[j].expense_task + '</td><td style=\"text-align: right;\">' + Math.round(rtask[j].qty) + '</td><td style=\"text-align: right;\">' + Math.round(rtask[j].sum) + '</td><td style=\"text-align: right;\">' + Math.round(rtask[j].order) + '</td><td style=\"text-align: right;\">' + Math.round(rtask[j].commit) + '</td></tr>';  \n    }\n    var template = '<div class=\"form-grid\"><table><tr class=\"grid-heading-row\"><th style=\"font-size: 9pt; width: 40%;\">Tipo<br><i>Type</i></th><th style=\"font-size: 9pt; width: 10%; text-align: right;\">Cantidad<br><i>Quantity</i></th><th style=\"font-size: 9pt; width: 15%; text-align: right;\">Ppto<br><i>Budget</i></th><th style=\"font-size: 9pt; width: 15%; text-align: right;\">Ud.Real<br><i>Act.Un.</i></th><th style=\"font-size: 9pt; width: 20%; text-align: right;\">Real<br><i>Actual</i></th></tr>' + rtemplate + '</table></div>';\n    //console.log(template);\n    frm.set_df_property('html_summary', 'options', frappe.render_template(template));\n    frm.refresh_field('html_summary');\n  }\n}"
 }
]
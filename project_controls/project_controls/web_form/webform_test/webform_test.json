{
 "accept_payment": 0,
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "amount": 0.0,
 "amount_based_on_field": 0,
 "breadcrumbs": "[{\"label\":_(\"Registry\"), \"route\":\"registro_es\"}]",
 "button_label": "Guardar",
 "client_script": "//* Locate HTML in web footer\n//referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\nvar div = document.querySelector('div[data-fieldtype=\"HTML\"]')\nvar footer = document.querySelector('div.web-form-footer.pull-right')\nfooter.parentNode.insertBefore(div, footer.nextSibling);\n//\nfrappe.web_form.after_load = () => {\n  if (frappe.session.user != 'Administrator') {\n    frappe.call({\n      method: \"project_controls.project_controls.custom.get_emplid\",\n      args: {\n        \"user\": frappe.session.user,\n      },\n      callback: function(r) {\n        if (!r.exc) {\n          //Get array results and check for open To_Time to close or new From_Time to add\n          var data = r.message[0].attendance_device_id;\n          //console.log(data);\n          frappe.web_form.set_value(\"employee_id\", data);\n        }\n      }\n    });\n  }    \n};\n// Fill employee based on employee_id\nfrappe.web_form.on('employee_id', (field, value) => {\n  if ( value != \"\") {\n    value = value.toUpperCase();\n    document.querySelector('input[data-fieldname=\"employee_id\"]').value = value;\n    fltEmpl(value);\n  }      \n});\n// Function to get data from Employee ID\nfunction fltEmpl(value) {\n  $.ajax({\n    url: 'api/resource/Employee?fields=[\"*\"]&filters=[[\"Employee\",\"attendance_device_id\",\"=\",\"' + value + '\"]]',\n    success: function(r) {\n      //console.log(r.data[0]);\n      if (r.data.length === 1) {\n        document.querySelector('input[data-fieldname=\"employee_id\"]').readOnly = true;\n        var emp = r.data[0].employee;\n        var fname = r.data[0].employee_name;\n        var co = r.data[0].company;\n        frappe.web_form.set_value(\"employee\", emp);\n        document.querySelector('input[data-fieldname=\"employee\"]').readOnly = true;\n        frappe.web_form.set_value(\"employee_name\", fname);\n        document.querySelector('input[data-fieldname=\"employee_name\"]').readOnly = true;\n        frappe.web_form.set_value(\"company\", co);\n        document.querySelector('input[data-fieldname=\"company\"]').readOnly = true;\n      } else {\n        frappe.msgprint({\n          title: __('Notificacion'),\n          message: __('Identificador de Empleado Inexistente'),\n          primary_action:{\n            label: 'Entendido',\n            action() {\n              location.href = \"/\";\n              return(false);\n            }\n          }\n        });\n      }\n    }\n  });\n};\n// Get values for Assignment on logged employee\nfrappe.web_form.on('employee', (field, value) => {\n  if (value != \"\") {  \n    frappe.call({\n      method: \"project_controls.project_controls.custom.get_assignment\",\n      args: {\n        \"employee\": value,\n      },\n      callback: function(r) {\n        if (!r.exc) {\n          //Get array results and divide in subarrays of unique values for activity_type, project and task\n          let arr = r.message;\n          //console.log(arr);\n          if (arr.length > 0) {\n            //Get activity_type\n            let acts = new Set();\n            arr.forEach(itm => {\n              acts.add(itm.activity_type)\n            });\n            let acttype = [...acts];\n            if (acttype.length == 1) {\n              frappe.web_form.set_value(\"activity_type\", acttype[0]);\n              document.querySelector('input[data-fieldname=\"activity_type\"]').readOnly = true;\n            } else {\n              //console.log(acttype);\n              options = [];\n              for (var i = 0; i < acttype.length; i++) {\n                options.push({\n                  'label': acttype[i],\n                  'value': acttype[i]\n                });\n              };\n              var field = frappe.web_form.get_field('activity_type');\n              field._data = options;\n              field.refresh();\n            }\n            //Get project\n            let pjts = new Set();\n            arr.forEach(itm => {\n              pjts.add(itm.project)\n            });    \n            let pjt = [...pjts];\n            if (pjt.length == 1) {\n              frappe.web_form.set_value(\"project\", pjt[0]);\n              document.querySelector('input[data-fieldname=\"project\"]').readOnly = true;\n            } else {\n              //console.log(pjt);\n              options = [];\n              for (var i = 0; i < pjt.length; i++) {\n                options.push({\n                  'label': pjt[i],\n                  'value': pjt[i]\n                });\n              };\n              var field = frappe.web_form.get_field('project');\n              field._data = options;\n              field.refresh();\n            }\n            //Get task\n            let tasks = new Set();\n            arr.forEach(itm => {\n              tasks.add(itm.task + '_' + itm.task_name)\n            });\n            let tsk = [...tasks];\n            if (tsk.length == 1) {\n              frappe.web_form.set_value(\"task\", tsk[0].substring(0, 15));\n              document.querySelector('input[data-fieldname=\"task\"]').readOnly = true;\n            } else {\n              //console.log(tsk);\n              options = [];\n              for (var i = 0; i < tsk.length; i++) {\n                options.push({\n                  'label': tsk[i],\n                  'value': tsk[i].substring(0, 15)\n                });\n              };\n              var field = frappe.web_form.get_field('task');\n              field._data = options;\n              field.refresh();\n            }\n            //Get Timesheets in draft for the employee\n            fltTs(value);\n            //Get Open Time Logs in recovered Timesheet\n          } else {\n              frappe.msgprint({\n                title: __('Notificacion'),\n                message: __('Empleado sin Asignaciones. Contacta con Administracion'),\n                primary_action:{\n                  label: 'Entendido',\n                  action() {\n                    location.href = \"/\"\n                    //location.reload();\n                    return(false);\n                  }\n                }\n            });\n          }\n        }\n      }\n    });\n  }    \n});\n// Function to get Timesheets from Employee\nfunction fltTs(value) {\n  $.ajax({\n    url: 'api/resource/Timesheet?fields=[\"*\"]&filters=[[\"Timesheet\",\"employee\",\"=\",\"' + value + '\"],[\"Timesheet\",\"status\",\"=\",\"Draft\"]]',\n    success: function(r) {\n      if (r.data.length === 1) {\n        var tsheet = r.data[0].name;\n        frappe.web_form.set_value(\"time_log\", tsheet);\n        document.querySelector('input[data-fieldname=\"time_log\"]').readOnly = true;\n        filterTS(tsheet);\n      } else if (r.data.length === 0) {\n        // Create New Timesheet\n        document.querySelector('div[data-fieldname=\"time_log\"]').hidden = true;\n        document.querySelector('div[data-fieldname=\"to_time\"]').hidden = true;\n        document.querySelector('div[data-fieldname=\"index\"]').hidden = true;\n        frappe.web_form.set_value(\"from_time\", moment(frappe.datetime.now_datetime()).format(\"YYYY-MM-DD HH:mm:ss\"));\n      } else {\n        frappe.msgprint({\n          title: __('Notificacion'),\n          message: __('Hay demasiados partes abiertos.'),\n          primary_action:{\n            label: 'Entendido',\n            action() {\n              location.reload();\n              return(false);\n            }\n          }\n        });\n      }\n    }\n  });\n};\n//Recover logs from selected TS\nfunction filterTS(tsheet) {\n  frappe.call({\n    method: \"project_controls.project_controls.custom.get_timelogs\",\n    args: {\n      \"timesheet\": tsheet,\n    },\n    callback: function(r) {\n      if (!r.exc) {\n        //Get array results and check for open To_Time to close or new From_Time to add\n        let arrTs = r.message;\n        if (arrTs.length > 0) {\n          //console.log(arrTs);\n          var doNew = 0;\n          const isToTime = (itm) => itm.to_time === null;\n          var idx = arrTs.findIndex(isToTime);\n          //console.log(idx);\n          if (idx >= 0) {\n            frappe.web_form.set_value(\"index\", arrTs[idx].idx);\n            document.querySelector('input[data-fieldname=\"index\"]').readOnly = true;\n            document.querySelector('div[data-fieldname=\"from_time\"]').hidden = true;\n            frappe.web_form.set_value(\"to_time\", moment(frappe.datetime.now_datetime()).format(\"YYYY-MM-DD HH:mm:ss\"));\n          } else {    \n            const isFromTime = (itm) => itm.from_time === null;\n            var idx = arrTs.findIndex(isFromTime);\n            if (idx < 0) {\n              document.querySelector('div[data-fieldname=\"index\"]').hidden = true;\n              document.querySelector('div[data-fieldname=\"to_time\"]').hidden = true;\n              frappe.web_form.set_value(\"from_time\", moment(frappe.datetime.now_datetime()).format(\"YYYY-MM-DD HH:mm:ss\"));\n            }\n          }\n        } else {\n          //Hide to_time and fill from_time with current time\n          document.querySelector('div[data-fieldname=\"index\"]').hidden = true;\n          document.querySelector('div[data-fieldname=\"to_time\"]').hidden = true;\n          frappe.web_form.set_value(\"from_time\", moment(frappe.datetime.now_datetime()).format(\"YYYY-MM-DD HH:mm:ss\"));\n        }\n      }\n    }\n  });\n};\n// Fill item_code based on activity_type\nfrappe.web_form.on('activity_type', (field, value) => {\n  if ( value != \"\") {\n    fltItem(value);\n  }      \n});\n// Function to get data from Employee ID\nfunction fltItem(value) {\n  $.ajax({\n    url: 'api/resource/Item?fields=[\"*\"]&filters=[[\"Item\",\"time_activity\",\"=\",\"' + value + '\"]]',\n    success: function(r) {\n      console.log(r.data[0]);\n      if (r.data.length === 1) {\n        var itm = r.data[0].item_code;\n        frappe.web_form.set_value(\"item_code\", itm);\n        document.querySelector('input[data-fieldname=\"item_code\"]').readOnly = true;\n      } else {\n        frappe.msgprint({\n          title: __('Notificacion'),\n          message: __('Identificador de Producto Inexistente'),\n          primary_action:{\n            label: 'Entendido',\n            action() {\n              return(false);\n            }\n          }\n        });\n      }\n    }\n  });\n};",
 "creation": "2020-11-22 18:45:14.735343",
 "currency": "EUR",
 "doc_type": "Task",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "introduction_text": "<style>\n  body[data-path=\"webform-test\"] {\n    background: url('/assets/BizLand/assets/img/webform-bg.png'); \n  }\n</style>\n<div id=\"main\">\n<!-- ======= Header ======= -->\n<header class=\"fixed-top\" id=\"header\">\n  <div class=\"container d-flex align-items-center\">\n    <!-- <h1 class=\"logo mr-auto\"><a href=\"home_en\"><span>SME</span></a></h1> -->\n    <a class=\"logo mr-auto\" href=\"home_es\"><img alt=\"Activity\" height=\"30px\" src=\"assets/BizLand/assets/img/logo.png\"></a>\n    <nav class=\"nav-menu d-none d-lg-block\">\n      <ul>\n        <li><a href=\"registro_es?new=1\">Actividad</a></li>\n        <li><a href=\"webform-test?new=1\">Test</a></li>\n        <li class=\"drop-down\"><a>Idioma</a>\n          <ul>\n            <li><a href=\"webform-test?new=1\">English</a></li>\n            <li><a href=\"webform-test?new=1\">Espa\u00f1ol</a></li>\n          </ul>\n        </li>\n      </ul>\n    </nav><!-- .nav-menu -->\n  </div>\n</header><!-- End Header -->\n<div class=\"container\" style=\"margin-top: 18px;\">\n  <div class=\"card bg-transparent\">\n    <img alt=\"Smart pro MIoT\" class=\"card-img\" src=\"assets/BizLand/assets/img/webform-test-bg.png\">\n    <div class=\"card-img-overlay\">\n      <h5 class=\"card-title\">Formulario de Prueba</h5>\n      <p class=\"card-text\">Este es un formulario de Pruebas.</p>\n      <p class=\"card-text\"><small>Una App PibiCo MIoT</small></p>\n    </div>\n  </div>\n</div>\n</div>",
 "is_standard": 1,
 "login_required": 1,
 "max_attachment_size": 10,
 "modified": "2020-11-22 20:55:25.320099",
 "modified_by": "Administrator",
 "module": "Project Controls",
 "name": "webform-test",
 "owner": "Administrator",
 "payment_button_label": "Buy Now",
 "published": 1,
 "route": "webform-test",
 "route_to_success_link": 0,
 "show_attachments": 1,
 "show_in_grid": 0,
 "show_sidebar": 0,
 "sidebar_items": [],
 "success_message": "\u00a1Registro Realizado!",
 "success_url": "/webform-test",
 "title": "WebForm Test",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldtype": "HTML",
   "hidden": 0,
   "max_length": 0,
   "max_value": 0,
   "options": "<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-6 col-md-6\">\n      <h3>PibiCo<span>.</span></h3>\n      <p>\n        Avenida de la Costa,35-6T <br>\n        33209-Gij\u00f3n, Asturias<br>\n         Spain ES<br><br>\n         proyectos@pibico.es\n      </p>\n    </div>\n  </div>\n</div>",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  }
 ]
}